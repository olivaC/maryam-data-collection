PRTS: Specification and Model Checking
With the development of computing and sensing technology, information process and control software are integrated into everyday objects and activities. Design and development of control software for safety-critical systems are notoriously difficult problems. Real-life systems often have complex data components or complicated hierarchical control flows. Furthermore, control software often interacts with physical environment and therefore depends on quantitative timing. It is a challenging task to verify hierarchical complex real-time systems. In addition, probability exhibits itself commonly in the form of statistical estimates regarding the environment in which control software is embedded. Requiring a system always function perfectly within any environment is often overwhelming. In last 3 years, we aim to develop a useful tool for verifying hierarchical complex probabilistic real-time systems. In the first phase, we proposed a language called CSP# for system modeling. CSP# is an expressive language, combining Hoareâ€™s CSP [7] and data structures; after that, we extended this language to support probabilistic choices and we named it as PCSP#. It extended previous work on combining CSP with probabilistic choice [8] or on combining CSP with data structures [11]. Now we integrate real-time into this language and get PRTS. PRTS combines low-level programs, e.g., sequence programs defined in a simple imperative language or any C# program, with high-level specifications (with process constructs like parallel, choice, hiding, etc.), as well as timed transitions and probabilistic choices. It supports shared variables as well as abstract events, making it both state-based and event-based. Its underlying semantics is based on Markov Decision Processes (MDP) [3]. In summary, our own model checker PAT now could model and verify complex systems which include concurrency, real-time and probabilistic choices. These features guarantee users to analyze complicated real life systems such as Biology system, communication protocol and lift system. In this report, we introduce all the syntax and semantics used in PRTS and present some basic algorithms applied in PAT to handle this kind of model.