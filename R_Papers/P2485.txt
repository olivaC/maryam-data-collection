Mining input grammars from dynamic taints
Knowing which part of a program processes which parts of an input can reveal the structure of the input as well as the structure of the program. In a URL <pre>http://www.example.com/path/</pre>, for instance, the protocol <pre>http</pre>, the host <pre>www.example.com</pre>, and the path <pre>path</pre> would be handled by different functions and stored in different variables. Given a set of sample inputs, we use dynamic tainting to trace the data flow of each input character, and aggregate those input fragments that would be handled by the same function into lexical and syntactical entities. The result is a context-free grammar that reflects valid input structure. In its evaluation, our AUTOGRAM prototype automatically produced readable and structurally accurate grammars for inputs like URLs, spreadsheets or configuration files. The resulting grammars not only allow simple reverse engineering of input formats, but can also directly serve as input for test generators.