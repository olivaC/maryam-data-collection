A tale of the weaknesses of current client-side XSS filtering
Cross-Site Scripting (XSS) is one of the most severe security vulnerabilities of the Web. With the introduction of HTML5, the complexity of Web applications is ever increasing and despite the existence of robust protection libraries, Cross-Site Scripting vulnerabilities are nowadays omnipresent on the Web. In order to protect end users from being exploited, browser vendors reacted to this serious threat by outfitting their browsers with client-side XSS filters. Unfortunately, as we had to notice, the currently provided protection is severely limited, leaving end-users vulnerable to exploits in the majority of cases. In this paper, we present an analysis of Chrome’s XSS Auditor, in which we discovered 17 flaws, that enable us to bypass the Auditor’s filtering capabilities. We will demonstrate the bypasses and report on a tool to automatically generated XSS attacks utilizing the bypasses. Furthermore, we will report on a practical, empirical study of the Auditor’s protection capabilities in which we ran our generated attacks against a set of several thousand DOM-based, zero-day XSS vulnerabilities in the Alexa Top 10.000. In our experiments, we were able to successfully bypass the XSS filter on first try in over 80% of all vulnerable Web applications.