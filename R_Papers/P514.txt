An Approach to Detecting Design Patterns in MOF-Based Domain-Specific Models with QVT
A design pattern is a recurring and well-understood design fragment. In the context of a domain-specific modeling language (DSML), a design pattern is represented as a structure of constrained and inter-related model elements. Techniques that analyze models by detecting occurrences of known design patterns can simplify model comprehension and maintenance. Though each DSML may have its own unique set of design patterns, it is not practical to learn a separate detection technology for each specific DSML or family of design patterns. This paper describes a generic approach to specify domainspecific design patterns for MOF-based DSMLs at the metamodel level and automatically detect their occurrences in models. The approach is based on QVT (Query/View/Transformation). Patterns are specified declaratively with QVT-Relations (QVTr) transformations from DSML models, where elements playing pattern roles are identified, to a newly-defined DSML model for reporting identified occurrences. Pattern detection is implemented by executing these transformations. The approach has been prototyped using Eclipse technologies and used in a case study to detect the well-known GoF patterns in a design model of a large open-source system. Results were then analyzed for accuracy using precision and recall as metrics, confirming the adequacy of the approach to detect pattern occurrences with high accuracy.