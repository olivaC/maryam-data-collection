Using bayesian learning to estimate how hot an execution path is
Detecting commonly executed program paths (i.e. hot paths) is very essential for many program analyses. It is always advisable to perform code optimizations to those hot paths. Buse and Weimer [7] suggest an approach that uses static path information to build a Bayesian network that can infer the class (hot or cold) of a given path under the assumption that a hot path has minimal effect on the program state. In this project, we propose a modified version of this approach by enumerating static paths for each individual method. We then evaluate our model using the SPECjvm2008 [2] benchmarks. Our experiments show that our model can achieve a precision/recall tradeoff of 0.917/0.909. In the worst case, our model achieves a precision of 0.845 and a recall of 0.735