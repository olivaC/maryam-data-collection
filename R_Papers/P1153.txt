Requirements definition document for a software product line of car crash management systems
The purpose of this document is to define the requirements of a Software Product Line (SPL) called bCrash-SPL1 and aimed at managing car crash crisis. Basic features along with desired variations are proposed such that it results in a small SPL definition. The primary focus of the proposed variations is to allow for static and dynamic variations (i.e., dynamic change between variants at runtime). The software product line is described in the following manner: the specification of a "reference variant" of the SPL referred to as bCrash is first provided; in a specific section, we then include all the information concerning possible variations that could be applied to bCrash. In this way, all the variation points and their possible implementations are introduced. bCrash-SPL serves to illustrate the individual advantages and disadvantages of aspect-oriented modeling (AOM) and object-oriented modeling (OOM) approaches at the Workshop on Comparing Modeling Approaches (CMA) to be held at Models 2011. The CMA workshop will bring together practitioners of different modeling approaches including AOM and OOM approaches to discuss and evaluate their various approaches in the context of the bCrash-SPL and provided comparison criteria. Practitioners can choose to either specify the bCrash-SPL or to focus on the bCrash variant only. In either case, the modeling community is invited to demonstrate their approaches on the entire bCrash system or on the entire bCrash-SPL, thus providing a basis for discussion, comparison, and evaluation. For the bCrash-SPL, not all variations have to be modeled depending on their priority (see the beginning of Section 7 for more details on the priorities of variations). While there are many AOM approaches, from requirements to low-level design, it is still difficult to compare them and know under which conditions different approaches are most applicable. This comparison, however, is crucially important to unify existing AOM and more traditional OOM approaches and to generalize individual approaches into a comprehensive endto-end method. Such a method that spans from early requirements to low-level design and that includes validation does not yet exist, and it is not readily evident how such a method would actually work in practice. As part of identifying potential comprehensive methodologies, we must be able to evaluate on a focused example different AOM approaches with each other and also against more traditional OOM approaches, and apply the same criteria to each approach. The comparison criteria will be made available on the CMA workshop website well before the CMA workshop is held. Experiences with the original case study crisis management system2 indicate that a large scope for the case study leads to different researchers exploring different parts of the system. When different parts of a system are modeled using different approaches, it becomes difficult to compare these approaches. Hence, while the bCrash-SPL is based on the original, it is much more focused and comprises only one use case, a few non-functional requirements, and a few variations. The approach chosen in this requirements document is rather "agnostic", thus we tried both in terms of terminology used and document structure followed to be as "clergy independent" as possible. The abstraction and completeness levels chosen are supposed to be sufficient to reach our main goal as described above. We suppose that the execution of the services of any product line variant may be concurrent. This will depend on the constraints on the execution order described for each service definition. Nevertheless, we do not use any modeling notation to this aim and the concerned constraints are hence spread over the textual descriptions3 . This document introduces first the scope and stakeholders of the system in Sections 2 and 3, respectively. Then, the functional and non-functional requirements are specified in Sections 4 and 5, respectively. While Section 6 discusses hardware and standards, Section 7 highlights proposed variation points. The document concludes with a data dictionary in Section 8 and a glossary in Section 9.