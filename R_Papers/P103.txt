Identifying meaningless parameterized linear-temporal-logic formulas
Parameterized runtime monitoring formalisms allow predicates to bind free variables to values during the program’s execution. Some runtime monitoring tools, like J-LO, increase the formalism’s expressiveness by allowing predicates to query variables already during the matching process. This is problematic because, if no special care is taken, the predicate’s evaluation may need to query a variable that has not yet been bound, rendering the entire formula meaningless. In this paper we present a syntactic checking algorithm that recognizes meaningless formulas in future-time linear temporal logic. The algorithm assures that a predicate accesses a potentially unbound variable only when the truth value of this predicate cannot possibly impact the truth value of the entire formula at the time the predicate is being evaluated. Our approach allows users to specify a wide range of meaningful parameterized logic formulas, while at the same time forbidding such formulas that would otherwise have an unclear semantics due to insucient bindings. We have implemented the checking algorithm in the J-LO runtime verification tool