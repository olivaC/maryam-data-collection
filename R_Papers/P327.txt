Collaboration and governance with distributed version control
OSS projects are widely adopting distributed version control (DVC). The reasons for this shift and its effects on developer workflows and project organization are not well understood. However, there is no shortage of postings extolling the virtues or proclaiming the dangers of DVC. To shed light on this issue, we objectively examine the impact of using a DVC along three dimensions: Episodic Collaboration, Governance, and Continious Collaboration. We interviewed developers of major OSS projects that have switched to DVC, analyzed the version history of 60 projects that switched from CVC to DVC, and examined the effect of version control on the organizational structure of the Linux kernel and FreeBSD projects. We find that DVC substantially facilitates the release process and better insulates developer teams from the pain of dealing each otherâ€™s changes prematurely. So far, however, we have found little evidence that DVC adoption is changing the way projects govern themselves or the way developers discuss and work on early versions of code. The results of our investigation are pertinent to both researchers and projects or developers considering switching to a DVC system