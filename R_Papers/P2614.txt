Mining operational preconditions
A procedure’s client must satisfy its precondition— that is, reach a state in which the procedure may be called. Preconditions describe the state that needs to be reached, but not how to reach it. We use static analysis to infer the sequence of operations a variable goes through before being used as a parameter: “In parseProperties(String xml), the parameter xml normally stems from getProperties().” Such operational preconditions can be learned from code examples and checked to detect anomalies. Applied to AJ, our OP-M prototype found 288 violations of operational preconditions, uncovering 9 unique defects and 48 unique code smells.