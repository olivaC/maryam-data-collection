The Big Manual for the Java String Analyzer
The Java String Analyzer, called JSA, is a tool for performing static analysis of Java programs. Its purpose is to predict the possible values of string expressions in an attempt to validate the correctness of a program. The analysis is based on the technique described by Christensen, MÃ¸ller and Schwartzbach [1]. The JSA home page at http://www.brics.dk/JSA/ provides a more detailed reference of the classes than found in this manual, including Javadoc documentation. This manual describes version 2.1 of JSA. It is intended both for developers of tools that build on top of JSA and for those extending JSA with new functionality. As input, the tool takes the .class files to analyze, which we call the application classes. In the application classes, one or more string expressions are selected as hotspots. For each hotspot, the tool produces a finite-state automaton whose language contains all possible Unicode strings that the hotspot might evaluate to at runtime. This is a sound approximation: the output automaton may accept more strings than may actually occur, but not the opposite.